{"version":3,"sources":["components/ContactItem.js","parts/Contact.js","components/Tags.js","components/Title.js","parts/Education.js","parts/InformationBasic.js","components/Detail.js","parts/Experience.js","parts/Reference.js","parts/Skill.js","parts/InformationDetail.js","components/TimeUpdated.js","images/selected.png","info.js","App.js","serviceWorker.js","index.js"],"names":["ContactItem","name","link","onClick","newPage","className","href","target","rel","Contact","contacts","useState","value","setValue","map","val","setTimeout","undefined","Tags","tags","format","tag","index","Title","Education","schools","from","to","major","gpa","description","majorType","certificates","c","InformationBasic","profile","isChangeAvatar","onScrollBottom","src","avatar","alt","job","experience","gender","region","otherLanguages","join","Detail","isCollapse","detailContent","viewDetail","setViewDetail","content","title","lines","line","Experience","companyType","companyName","location","type","jobs","lang","details","Reference","Skill","myself","softwares","others","InformationDetail","parts","current","last","itemIndex","setItemIndex","extenseAll","setExtenseAll","style","transform","transitionDuration","Math","abs","item","visible","prev","icon","sliderItem","htmlFor","id","checked","onChange","React","cloneElement","component","TimeUpdated","date","education","skill","software","other","scrollRef","createRef","timeTmp","App","setChangeAvatar","time","setTime","useEffect","window","innerWidth","countDown","ref","onScroll","scrollTop","scrollTo","left","top","innerHeight","behavior","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAEaA,EAAc,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,QAA+B,IAAtBC,eAAsB,SACrE,OACI,mBAAGC,UAAU,iBAAiBC,KAAMJ,EAAMK,OAAQH,EAAU,SAAW,UAAWI,IAAI,aAClFL,QAAS,WACAC,GACDD,KAHZ,SAOI,mBAAGE,UAAS,gBAAWJ,EAAX,mCCNXQ,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACI,sBAAKR,UAAU,uDAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,mBAAGA,UAAU,oEAAb,sBAGCK,EAASI,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,2BAAgCA,GAAhC,IACIZ,QAAS,WACLU,EAASE,EAAIb,MACbc,YAAW,WACPH,OAASI,KACV,QALOF,EAAId,YAU7BW,GACG,mBAAGP,UAAU,4DAAb,SACKO,QCxBRM,EAAO,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAA6B,IAArBf,iBAAqB,MAAT,GAAS,EAEtD,OACI,qBAAKA,UAAS,yBAAoBA,GAAlC,SACKc,EAAKL,KAAI,SAACO,EAAKC,GAAN,OACN,8BACI,uBAAMjB,UAAU,0GAAhB,cACMe,EAAOC,OAFPC,SCLbC,EAAQ,SAAC,GAA8B,IAA5BtB,EAA2B,EAA3BA,KAA2B,IAArBI,iBAAqB,MAAT,GAAS,EAE/C,OACI,oBAAIA,UAAS,0EAAqEA,GAAlF,SACKJ,KCHAuB,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACI,gCACI,cAAC,EAAD,CAAOxB,KAAK,eACXwB,EAAQX,KAAI,SAAAC,GAAG,OACZ,gCACI,sBAAKV,UAAU,QAAf,UACI,mBAAGA,UAAU,sBAAb,SACKU,EAAId,OAET,sBAAKI,UAAU,yBAAf,UAEI,oBAAGA,UAAU,sBAAb,cACMU,EAAIW,QAEV,mBAAGrB,UAAU,8BAA8B,cAAY,SACvD,oBAAGA,UAAU,sBAAb,UACKU,EAAIY,GADT,aAOR,sBAAKtB,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAf,UACI,mBAAGA,UAAU,0BAAb,oBAGA,mBAAGA,UAAU,+BAAb,SACKU,EAAIa,WAIb,sBAAKvB,UAAU,OAAf,UACI,mBAAGA,UAAU,0BAAb,kBAGA,mBAAGA,UAAU,+BAAb,SACKU,EAAIc,SAGZd,EAAIe,aACD,mBAAGzB,UAAU,+BAAb,SACKU,EAAIe,iBAIjB,cAAC,EAAD,CAAMzB,UAAU,MAAMc,KAAMJ,EAAIgB,UAAWX,OAAQ,SAACC,GAAD,OAASA,KAC5D,sBAAKhB,UAAU,GAAf,UACI,6CAGCU,EAAIiB,aAAalB,KAAI,SAACmB,EAAGX,GAAJ,OAClB,gCACI,mBAAGjB,UAAU,oCAAoC,cAAY,SAC7D,mBAAGA,UAAU,yDAAyDC,KAAM2B,EAAE/B,KAAMK,OAAO,SAASC,IAAI,aAAxG,SAAuHyB,EAAEhC,SAFnHqB,WAhDZP,EAAId,aCNjBiC,EAAmB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,eACxD,OACI,sBAAKhC,UAAU,4CAAf,UACI,qBAAKA,UAAU,+CAAf,SACI,qBAAKiC,IAAKH,EAAQI,OAAQC,IAAI,SAC1BnC,UAAW,6HAEJ+B,EAAiB,YAAc,iBAE9C,sBAAK/B,UAAU,gCAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,2BAAd,SAA0C8B,EAAQlC,OAClD,oBAAGI,UAAU,4BAAb,UAA0C8B,EAAQM,IAAlD,MAA0DN,EAAQO,iBAEtE,sBAAKrC,UAAU,gBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,mBAAGA,UAAU,kCAAkC,cAAY,SAC3D,oBAAGA,UAAU,sBAAb,oBAEI,sBAAMA,UAAU,kBAAhB,SACK8B,EAAQQ,eAIrB,sBAAKtC,UAAU,oBAAf,UACI,mBAAGA,UAAU,kCAAkC,cAAY,SAC3D,oBAAGA,UAAU,sBAAb,wBAEI,sBAAMA,UAAU,kBAAhB,SACK8B,EAAQS,eAIrB,sBAAKvC,UAAU,oBAAf,UACI,mBAAGA,UAAU,kCAAkC,cAAY,SAC3D,oBAAGA,UAAU,sBAAb,6BAEI,sBAAMA,UAAU,kBAAhB,SACK8B,EAAQU,eAAeC,KAAK,cAIxCX,EAAQL,aACL,mBAAGzB,UAAU,oCAAb,SAAkD8B,EAAQL,oBAItE,qBAAKzB,UAAU,6DAAf,SACI,yBAAQA,UAAU,kBAAkBF,QAASkC,EAA7C,UACI,mBAAGhC,UAAU,oDAAoD,cAAY,SAC7E,mBAAGA,UAAU,uDAAuD,cAAY,kBClDvF0C,EAAS,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,WAAqD,IAAzCC,qBAAyC,MAAzB,GAAyB,MAArB5C,iBAAqB,MAAT,GAAS,EAC1E,EAAoCM,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KACA,OACI,sBAAK9C,UAAS,UAAKA,GAAnB,UACI,qBAAKA,UAAS,UAAM6C,GAAcF,EAAc,QAAU,UAA1D,gBACKC,QADL,IACKA,OADL,EACKA,EAAenC,KAAI,SAACsC,EAAS9B,GAAV,aAChB,sBAAiBjB,UAAU,OAA3B,UACI,sBAAKA,UAAU,YAAf,eACM,sBAAMA,UAAU,YAAhB,SAA6B+C,EAAQC,QAD3C,OAGA,qBAAKhD,UAAU,OAAf,mBACK+C,EAAQE,aADb,aACK,EAAexC,KAAI,SAACyC,EAAMjC,GAAP,OAChB,oBAAqBjB,UAAU,GAA/B,eACOkD,IADP,WAAYjC,WANdA,QAclB,yBAAQjB,UAAS,yCAAoC2C,EAAa,cAAgB,uBAC9E7C,QAAS,kBAAMgD,GAAeD,IADlC,UAGI,sBAAM7C,UAAU,OAAhB,SAAyB6C,GAAcF,EAAc,WAAa,gBAChEE,GAAcF,EACZ,mBAAG3C,UAAU,iBAAiB,cAAY,SAC1C,mBAAGA,UAAU,mBAAmB,cAAY,gBCvBnDmD,EAAa,SAAC,GAA+B,IAA9BR,EAA6B,EAA7BA,WAAYN,EAAiB,EAAjBA,WACpC,OACI,sBAAKrC,UAAU,GAAf,UACI,cAAC,EAAD,CAAOJ,KAAK,gBACZ,sBAAKI,UAAU,YAAf,UACI,8BACI,qBAAKA,UAAU,8CAEnB,qBAAKA,UAAU,iCAAf,SACI,qBAAKA,UAAU,aAAf,SACKqC,EAAW5B,KAAI,SAACC,EAAKO,GAAN,OACZ,gCACI,sBAAKjB,UAAU,oBAAf,UACI,mBAAGA,UAAU,+CAA+C,cAAY,SACnD,MAApBU,EAAI0C,aACD,mBAAGpD,UAAU,sBAAsB,cAAY,SAE9B,MAApBU,EAAI0C,aACD,mBAAGpD,UAAU,mBAAmB,cAAY,SAE3B,MAApBU,EAAI0C,aACD,mBAAGpD,UAAU,4BAA4B,cAAY,SAEzD,mBAAGA,UAAU,sBAAb,SACKU,EAAI2C,cAET,sBAAKrD,UAAU,yBAAf,UACI,oBAAGA,UAAU,sBAAb,cACMU,EAAIW,QAEV,mBAAGrB,UAAU,8BAA8B,cAAY,SACvD,oBAAGA,UAAU,sBAAb,UACKU,EAAIY,GADT,aAOR,gCACKZ,EAAI4C,UACD,sBAAKtD,UAAU,qBAAf,UACI,mBAAGA,UAAU,gCAAgC,cAAY,SACzD,mBAAGA,UAAU,+BAAb,SACKU,EAAI4C,cAIhB5C,EAAI6C,MACD,sBAAKvD,UAAU,QAAf,UACI,mBAAGA,UAAU,+BAAb,uBAGA,mBAAGA,UAAU,+BAAb,SACKU,EAAI6C,UAIhB7C,EAAIe,aACD,mBAAGzB,UAAU,oDAAb,SACKU,EAAIe,iBAIjB,cAAC,EAAD,CAAMzB,UAAU,MAAMc,KAAMJ,EAAI8C,KAAMzC,OAAQ,SAACqB,GAAD,gBAAYA,EAAIxC,KAAhB,cAA0BwC,EAAIqB,SAC5E,cAAC,EAAD,CAAQb,cAAelC,EAAIgD,QAAS1D,UAAU,OAAO2C,WAAYA,MArD3D1B,iBCbzB0C,EAAY,WACrB,OACI,8BACI,cAAC,EAAD,CAAO/D,KAAK,kBCHXgE,EAAQ,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OACvC,OACI,gCACI,cAAC,EAAD,CAAOnE,KAAK,WACZ,sBAAKI,UAAU,YAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,mBAAGA,UAAU,0DAAb,oBACA,8BACK6D,GAAUA,EAAOpD,KAAI,SAAAC,GAAG,OACrB,oBAAaV,UAAU,oBAAvB,UACI,mBAAGA,UAAU,6CAA6C,cAAY,SACrEU,IAFGA,WAOpB,sBAAKV,UAAU,uBAAf,UACI,mBAAGA,UAAU,0DAAb,uBACA,8BACK8D,GAAaA,EAAUrD,KAAI,SAAAC,GAAG,OAC3B,oBAAaV,UAAU,oBAAvB,UACI,mBAAGA,UAAU,6CAA6C,cAAY,SACrEU,IAFGA,WAOpB,sBAAKV,UAAU,uBAAf,UACI,mBAAGA,UAAU,0DAAb,oBACA,8BACK+D,GAAUA,EAAOtD,KAAI,SAAAC,GAAG,OACrB,oBAAaV,UAAU,oBAAvB,UACI,mBAAGA,UAAU,6CAA6C,cAAY,SACrEU,IAFGA,kBChCvBsD,EAAoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEhC,EAAkC3D,mBAAS,CACvC4D,QAAS,EACTC,KAAM,IAFV,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,EAAoC/D,oBAAS,GAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KA4BA,OACI,sBAAKvE,UAAU,uBAAf,UACI,qBAAKA,UAAU,2CAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,gBAAgBwE,MAAO,CAClCC,UAAU,WAAD,OAAa,IAAML,EAAUF,QAAU,EAAI,GAA3C,QACTQ,mBAAqE,GAAhDC,KAAKC,IAAIR,EAAUD,KAAOC,EAAUF,SAAkB,KAF/E,SAIKD,EAAMxD,KAAI,SAACoE,EAAM5D,GAAP,OAlCZ,SAAC4D,EAAM5D,GACtB,OAAI4D,EAAKC,QAED,qBAAiB9E,UAAS,8BAAyBoE,EAAUF,UAAYjD,EAAQ,6BAA+B,IAC5GuD,MAAO,CACHC,UAAU,WAAD,QAAc,IAAMxD,EAAQ,EAA5B,SAFjB,SAII,sBAAKjB,UAAS,oCAA+BoE,EAAUF,UAAYjD,EAAQ,iBAAmB,IAC1FnB,QAAS,WACDsE,EAAUF,UAAYjD,GACtBoD,GAAa,SAACU,GAAD,MAAW,CACpBb,QAASjD,EACTkD,KAAMY,EAAKb,aAL3B,UASI,qBAAKlE,UAAS,UAAKoE,EAAUF,UAAYjD,EAAQ,gCAAkC,MACnF,mBAAGjB,UAAS,aAAQ6E,EAAKG,KAAb,mBAdV/D,GAmBP,uBAAUA,GAYuBgE,CAAWJ,EAAM5D,QAGjD,qBAAKjB,UAAU,eAAf,SACKiE,EAAMxD,KAAI,SAACC,EAAKO,GAAN,OACP,qBAAiBjB,UAAS,6BAAwBoE,EAAUF,UAAYjD,EAAQ,8BAAgC,IAAhH,SACI,oBAAIjB,UAAU,qCAAd,SAAoDU,EAAId,QADlDqB,aAO1B,qBAAKjB,UAAU,2CAAf,SACI,qBAAKA,UAAU,qGAAf,SAEKiE,EAAMxD,KAAI,SAACC,EAAKO,GACb,OAAIP,EAAIoE,QAEA,sBAAiB9E,UAAS,6NAEpBoE,EAAUF,QAAUjD,EAAQ,2BAC1BmD,EAAUF,UAAYjD,EAAQ,2BAC1BmD,EAAUF,QAAUjD,EAAQ,0BAA4B,GAJ1C,8BAA1B,UAMI,wBAAQjB,UAAU,8CAAlB,SACI,wBAAOkF,QAAQ,eAAelF,UAAU,gDAAxC,UACI,sBAAMA,UAAU,iBAAhB,yBACA,sBAAKA,UAAU,sBAAf,UACI,uBAAOmF,GAAG,eAAe5B,KAAK,WAAWvD,UAAU,SAC/CoF,QAASd,EACTe,SAAU,kBAAMd,GAAeD,MAEnC,qBAAKtE,UAAU,gEACf,qBAAKA,UAAU,uFAI3B,qBAAKA,UAAU,qBAAf,SACKsF,IAAMC,aAAa7E,EAAI8E,UAAW,CAAE7C,WAAY2B,QApB/CrD,GA0BP,uBAAUA,cCtFhCwE,EAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAA2B,IAArB1F,iBAAqB,MAAT,GAAS,EAErD,OACI,qBAAKA,UAAU,kEAAf,SACI,oBAAGA,UAAS,UAAKA,GAAjB,wBAA0C0F,QCNvC,MAA0B,qCCInCrF,EAAW,CACb,CACIT,KAAM,QACNC,KAAM,sBACNE,SAAS,GAEb,CACIH,KAAM,WACNC,KAAM,kCACNE,SAAS,GAEb,CACIH,KAAM,kBACNC,KAAM,4CACNE,SAAS,IAGX+B,EAAU,CACZlC,KAAM,8BACNsC,OAAQA,EACRE,IAAK,wBACLC,WAAY,oBACZE,OAAQ,UACRD,OAAQ,OACRE,eAAgB,CACZ,WAEJf,YAAY,iOAIVkE,EAAY,CAAC,CACf/F,KAAM,iBACN0D,SAAU,mBACV/B,MAAO,oBACPG,UAAW,CACP,cACA,cACA,cAEJL,KAAM,UACNC,GAAI,SACJE,IAAK,OACLC,YAAa,GACbE,aAAc,CACV,CACI/B,KAAM,6DACNC,KAAM,kEAKZwC,EAAa,CACf,CACIgB,YAAa,eACbD,YAAa,IACbE,SAAU,mBACVC,KAAM,SACNlC,KAAM,UACNC,GAAI,UACJkC,KAAM,CAAC,CACH5D,KAAM,WACN6D,KAAM,iBAEVhC,YAAa,uFACbiC,QAAS,CACL,CACIV,MAAO,sBACPC,MAAO,CACH,UACA,mBACA,sBACA,8DACA,oBACA,UAGR,CACID,MAAO,mBACPC,MAAO,CACH,0IACA,gIAKhB,CACII,YAAa,gBACbD,YAAa,IACb/B,KAAM,UACNC,GAAI,UACJkC,KAAM,CAAC,CACH5D,KAAM,YACN6D,KAAM,YAEVhC,YAAa,6DACbiC,QAAS,CACL,CACIV,MAAO,sBACPC,MAAO,CACH,aACA,2BACA,wBACA,0CAGR,CACID,MAAO,mBACPC,MAAO,CACH,gFACA,2CACA,uCACA,wDAKhB,CACII,YAAa,oCACbD,YAAa,IACb/B,KAAM,UACNC,GAAI,UACJkC,KAAM,CACF,CACI5D,KAAM,SACN6D,KAAM,gBAEV,CACI7D,KAAM,WACN6D,KAAM,gBAEV,CACI7D,KAAM,YACN6D,KAAM,WAEV,CACI7D,KAAM,WACN6D,KAAM,WAGdhC,YAAa,+DACbiC,QAAS,CACL,CACIV,MAAO,iCACPC,MAAO,CACH,WACA,qBACA,uBACA,2CACA,cACA,kBACA,cACA,oBAGR,CACID,MAAO,8BACPC,MAAO,CACH,qDACA,0FACA,qFACA,iIAGR,CACID,MAAO,0DACPC,MAAO,CACH,eACA,gBACA,0BACA,cAGR,CACID,MAAO,uDACPC,MAAO,CACH,+CACA,mHACA,mDAGR,CACID,MAAO,mDACPC,MAAO,CACH,eACA,wBACA,kBACA,0BACA,cAGR,CACID,MAAO,gDACPC,MAAO,CACH,oCACA,qHACA,4DACA,gGAGR,CACID,MAAO,iCACPC,MAAO,CACH,6BACA,oBACA,oBAGR,CACID,MAAO,8BACPC,MAAO,CACH,qCACA,iEACA,iEAKhB,CACII,YAAa,gBACbD,YAAa,IACb/B,KAAM,UACNC,GAAI,UACJkC,KAAM,CAAC,CACH5D,KAAM,YACN6D,KAAM,YAEVhC,YAAa,iFACbiC,QAAS,CACL,CACIV,MAAO,sBACPC,MAAO,CACH,YACA,sBAGR,CACID,MAAO,mBACPC,MAAO,CACH,0FACA,oCACA,gDAKhB,CACII,YAAa,gBACbD,YAAa,IACb/B,KAAM,UACNC,GAAI,UACJkC,KAAM,CAAC,CACH5D,KAAM,YACN6D,KAAM,iBAEVhC,YAAa,0JACbiC,QAAS,CACL,CACIV,MAAO,sBACPC,MAAO,CACH,+BACA,mBACA,2CACA,wCACA,oBACA,eACA,cAGR,CACID,MAAO,mBACPC,MAAO,CACH,wDACA,6GACA,qCACA,oCACA,oCACA,2DAKhB,CACII,YAAa,gBACbD,YAAa,IACb/B,KAAM,UACNC,GAAI,UACJkC,KAAM,CAAC,CACH5D,KAAM,YACN6D,KAAM,YAEVhC,YAAa,8KACbiC,QAAS,CACL,CACIV,MAAO,sBACPC,MAAO,CACH,mBACA,OACA,yCACA,iBAGR,CACID,MAAO,mBACPC,MAAO,CACH,qCACA,oCACA,8CACA,8CACA,yBAQd2C,EAAQ,CACV/B,OAAQ,CACJ,qBACA,uBACA,sBACA,YAEJgC,SAAU,CACN,gBACA,qBACA,iBACA,gBACA,eAEJC,MAAO,CACH,YACA,cACA,UACA,SACA,YCzUFC,EAAYT,IAAMU,YACpBC,EAAU,EA2HCC,MA1Hf,WAEE,IAAMjC,EAAQ,CACZ,CACErE,KAAM,cACNoF,KAAM,yBACNF,SAAS,EACTU,UAAW,cAAC,EAAD,CAAYnD,WAAYA,KAErC,CACEzC,KAAM,aACNoF,KAAM,oBACNF,SAAS,EACTU,UAAW,cAAC,EAAD,CAAWpE,QAASuE,KAEjC,CACE/F,KAAM,SACNoF,KAAM,eACNF,SAAS,EACTU,UAAW,cAAC,EAAD,CAAO3B,OAAQ+B,EAAM/B,OAAQC,UAAW8B,EAAMC,SAAU9B,OAAQ6B,EAAME,SAEnF,CACElG,KAAM,aACNoF,KAAM,cACNF,SAAS,EACTU,UAAW,cAAC,EAAD,KAEb,CACE5F,KAAM,OACNkF,SAAS,IAIb,EAA0CxE,oBAAS,GAAnD,mBAAOyB,EAAP,KAAuBoE,EAAvB,KACA,EAAwB7F,mBAAS,GAAjC,mBAAO8F,EAAP,KAAaC,EAAb,KAaAC,qBAAU,WACJC,OAAOC,YAAc,MACvBP,EAAU,EACVQ,OAED,IAEH,IAAMA,EAAY,SAAZA,IACAR,GAAW,EACbI,EAAQ,IAGVJ,IACAI,EAAQJ,GACRtF,WAAW8F,EAAW,OAExB,OAAIL,EAAO,EAGP,qBAAKpG,UAAU,iEAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,mBAAGA,UAAU,0BAAb,iEACA,oBAAGA,UAAU,8BAAb,UAA4CoG,EAA5C,oBACA,wBAAQpG,UAAU,oDAChBF,QAAS,WAAQmG,EAAU,GAD7B,2BAUN,sBAAKjG,UAAU,mEACb0G,IAAKX,EACLY,SA9Ca,WAAO,IAAD,EACfC,EAAS,UAAGb,EAAU7B,eAAb,aAAG,EAAmB0C,UACrCT,EAAgBS,GAAa,MA0C7B,UAIE,qBAAK5G,UAAW,sBACX+B,EAAiB,kCAAoC,IAD1D,SAEE,sBAAK/B,UAAU,qBAAf,UACE,sBAAKA,UAAU,gCAAf,WACI+B,GACA,mBAAG/B,UAAU,+DAAb,qBAIF,sBAAKA,UAAW,0DACX+B,EAAiB,yDAA2D,IADjF,UAGE,qBAAKE,IAAKH,EAAQI,OAAQC,IAAI,SAC5BnC,UAAW,4HAEN+B,EAAiB,YAAc,eACrCA,GACC,sBAAK/B,UAAU,iCAAf,UACE,oBAAIA,UAAU,2CAAd,SACG8B,EAAQlC,OAEX,mBAAGI,UAAU,0CAAb,SACG8B,EAAQM,eAMnB,cAAC,EAAD,CAAS/B,SAAUA,SAGvB,cAAC,EAAD,CAAkByB,QAASA,EAASC,eAAgBA,EAAgBC,eA3E/C,WAAO,IAAD,EAC7B,UAAA+D,EAAU7B,eAAV,SAAmB2C,SAAS,CAC1BC,KAAM,EACNC,IAA0B,EAArBR,OAAOS,YACZC,SAAU,cAwEV,cAAC,EAAD,CAAmBhD,MAAOA,IAC1B,cAAC,EAAD,CAAayB,KDhIH,aCgIkB1F,UAAU,2BCtHxBkH,QACW,cAA7BX,OAAOjD,SAAS6D,UAEe,UAA7BZ,OAAOjD,SAAS6D,UAEhBZ,OAAOjD,SAAS6D,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.54afb0f6.chunk.js","sourcesContent":["import React, { } from 'react';\r\n\r\nexport const ContactItem = ({ name, link, onClick, newPage = false }) => {\r\n    return (\r\n        <a className=\"cursor-pointer\" href={link} target={newPage ? \"_blank\" : \"_parent\"} rel=\"noreferrer\"\r\n            onClick={() => {\r\n                if (!newPage) {\r\n                    onClick();\r\n                }\r\n            }}\r\n        >\r\n            <i className={`fa fa-${name} text-white text-2xl m-2.5`}></i>\r\n        </a>\r\n    )\r\n}","\r\nimport React, { useState } from 'react';\r\n\r\nimport { ContactItem } from 'components/ContactItem';\r\n\r\nexport const Contact = ({ contacts }) => {\r\n    const [value, setValue] = useState();\r\n    return (\r\n        <div className=\"w-1/3 h-full flex flex-col md:self-auto self-center \">\r\n            <div className=\"flex items-center justify-end\" >\r\n                <p className=\"text-md text-right bold font-sans text-white mr-4 md:block hidden\">\r\n                    Contacts\r\n                </p>\r\n                {contacts.map(val =>\r\n                    <ContactItem key={val.name} {...val}\r\n                        onClick={() => {\r\n                            setValue(val.link);\r\n                            setTimeout(() => {\r\n                                setValue(undefined);\r\n                            }, 30000);\r\n                        }}\r\n                    />\r\n                )}\r\n            </div>\r\n            {value &&\r\n                <p className=\"text-white text-right font-sans underline md:block hidden\">\r\n                    {value}\r\n                </p>}\r\n        </div>\r\n    )\r\n}","import React, { } from 'react';\r\n\r\nexport const Tags = ({ tags, format, className = \"\" }) => {\r\n\r\n    return (\r\n        <div className={`flex flex-wrap ${className}`}>\r\n            {tags.map((tag, index) =>\r\n                <div key={index}>\r\n                    <span className=\"block bg-gray-200 hover:bg-red-300 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n                        #{format(tag)}\r\n                    </span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { } from 'react';\r\n\r\nexport const Title = ({ name, className = \"\" }) => {\r\n\r\n    return (\r\n        <h3 className={`uppercase font-bold text-base text-xl font-sans pb-1 border-b-2 ${className}`}>\r\n            {name}\r\n        </h3>\r\n    )\r\n}","import { Tags } from 'components/Tags';\r\nimport { Title } from 'components/Title';\r\nimport React, { } from 'react';\r\nexport const Education = ({ schools }) => {\r\n    return (\r\n        <div>\r\n            <Title name=\"Educations\" />\r\n            {schools.map(val =>\r\n                <div key={val.name}>\r\n                    <div className=\"flex \">\r\n                        <p className=\"font-bold font-sans\">\r\n                            {val.name}\r\n                        </p>\r\n                        <div className=\"flex items-center ml-4\">\r\n\r\n                            <p className=\"font-bold font-sans\">\r\n                                ({val.from}\r\n                            </p>\r\n                            <i className=\"fa fa-long-arrow-right mx-3\" aria-hidden=\"true\" />\r\n                            <p className=\"font-bold font-sans\">\r\n                                {val.to})\r\n                            </p>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"pl-6\">\r\n                        <div className=\"flex \">\r\n                            <p className=\"text-gray-700 text-base\">\r\n                                Major:\r\n                            </p>\r\n                            <p className=\"ml-3 text-gray-700 text-base\">\r\n                                {val.major}\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"flex\">\r\n                            <p className=\"text-gray-700 text-base\">\r\n                                GPA:\r\n                            </p>\r\n                            <p className=\"ml-3 text-gray-700 text-base\">\r\n                                {val.gpa}\r\n                            </p>\r\n                        </div>\r\n                        {val.description &&\r\n                            <p className=\"ml-3 text-gray-700 text-base\">\r\n                                {val.description}\r\n                            </p>\r\n                        }\r\n                    </div>\r\n                    <Tags className=\"p-2\" tags={val.majorType} format={(tag) => tag} />\r\n                    <div className=\"\">\r\n                        <p>\r\n                            Certificate:\r\n                        </p>\r\n                        {val.certificates.map((c, index) =>\r\n                            <div key={index}>\r\n                                <i className=\"fa fa-certificate text-yellow-500\" aria-hidden=\"true\"></i>\r\n                                <a className=\"ml-2 cursor-pointer text-green-500 font-bold text-base\" href={c.link} target=\"_blank\" rel=\"noreferrer\" >{c.name}</a>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}","import React, { } from 'react';\r\n\r\nexport const InformationBasic = ({ profile, isChangeAvatar, onScrollBottom }) => {\r\n    return (\r\n        <div className=\"relative md:w-3/4 w-full mx-auto h-screen\">\r\n            <div className=\"flex justify-center transform translate-y-20\">\r\n                <img src={profile.avatar} alt=\"avatar\"\r\n                    className={\"overflow-hidden w-40 rounded-full border-solid border-white border-2 -mt-3 shadow-xl \"\r\n                        + \"transition duration-500 ease-in-out \"\r\n                        + (isChangeAvatar ? \"opacity-0\" : \"opacity-1\")} />\r\n            </div>\r\n            <div className=\"bg-white rounded-xl p-4 pt-24\">\r\n                <div className=\"text-center px-3 pb-6\">\r\n                    <h3 className=\"text-xl bold font-roboto\">{profile.name}</h3>\r\n                    <p className=\"mt-2 font-sans font-light\">{profile.job} - {profile.experience}</p>\r\n                </div>\r\n                <div className=\"md:px-28 px-2\">\r\n                    <div className=\"flex items-center\">\r\n                        <i className=\"fa fa-check mr-3 text-green-500\" aria-hidden=\"true\"></i>\r\n                        <p className=\"font-roboto text-lg\">\r\n                            Gender:\r\n                            <span className=\"ml-2 font-light\">\r\n                                {profile.gender}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <i className=\"fa fa-check mr-3 text-green-500\" aria-hidden=\"true\"></i>\r\n                        <p className=\"font-roboto text-lg\">\r\n                            Nationaity:\r\n                            <span className=\"ml-2 font-light\">\r\n                                {profile.region}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <i className=\"fa fa-check mr-3 text-green-500\" aria-hidden=\"true\"></i>\r\n                        <p className=\"font-roboto text-lg\">\r\n                            Other Languages:\r\n                            <span className=\"ml-2 font-light\">\r\n                                {profile.otherLanguages.join(\", \")}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                    {profile.description &&\r\n                        <p className=\"mt-2 font-sans font-light text-lg\">{profile.description}</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"md:absolute md:bottom-6 w-full text-center hidden md:block\">\r\n                <button className=\"relative m-auto\" onClick={onScrollBottom}>\r\n                    <i className=\"fa fa-arrow-down text-white text-5xl animate-ping\" aria-hidden=\"true\"></i>\r\n                    <i className=\"fa fa-arrow-down text-white text-5xl absolute left-0\" aria-hidden=\"true\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nexport const Detail = ({ isCollapse, detailContent = [], className = \"\" }) => {\r\n    const [viewDetail, setViewDetail] = useState(false);\r\n    return (\r\n        <div className={`${className}`}>\r\n            <div className={`${(viewDetail || isCollapse) ? \"block\" : \"hidden\"}`}>\r\n                {detailContent?.map((content, index) =>\r\n                    <div key={index} className=\"mb-2\">\r\n                        <div className=\"font-bold\">\r\n                            + <span className=\"underline\">{content.title}</span>:\r\n                        </div>\r\n                        <div className=\"ml-4\">\r\n                            {content.lines?.map((line, index) => (\r\n                                <p key={`l${index}`} className=\"\">\r\n                                    - {line}\r\n                                </p>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <button className={` border-2 rounded-md px-3 mb-2 ${isCollapse ? \"bg-gray-200\" : \"hover:border-black \"}`}\r\n                onClick={() => setViewDetail(!viewDetail)}\r\n            >\r\n                <span className=\"mr-2\">{(viewDetail || isCollapse) ? \"Collapse\" : \"View detail\"}</span>\r\n                {(viewDetail || isCollapse) ?\r\n                    <i className=\"fa fa-angle-up\" aria-hidden=\"true\" /> :\r\n                    <i className=\"fa fa-angle-down\" aria-hidden=\"true\" />\r\n                }\r\n            </button>\r\n        </div>\r\n    )\r\n}","import { Detail } from 'components/Detail';\r\nimport { Tags } from 'components/Tags';\r\nimport { Title } from 'components/Title';\r\nimport React, { } from 'react';\r\n\r\nexport const Experience = ({isCollapse, experience }) => {\r\n    return (\r\n        <div className=\"\">\r\n            <Title name=\"Experiences\" />\r\n            <div className=\"flex mt-2\">\r\n                <div>\r\n                    <div className=\"h-full w-1 bg-gray-300 timeline rounded\"></div>\r\n                </div>\r\n                <div className=\"flex flex-1 flex-col ml-4 mt-2\">\r\n                    <div className=\"max-h-full\">\r\n                        {experience.map((val, index) =>\r\n                            <div key={index}>\r\n                                <div className=\"flex items-center\">\r\n                                    <i className=\"fa fa-circle -ml-5.5 absolute text-green-500\" aria-hidden=\"true\"></i>\r\n                                    {val.companyType === 'C' &&\r\n                                        <i className=\"fa fa-building mr-2\" aria-hidden=\"true\"></i>\r\n                                    }\r\n                                    {val.companyType === 'F' &&\r\n                                        <i className=\"fa fa-users mr-2\" aria-hidden=\"true\"></i>\r\n                                    }\r\n                                    {val.companyType === 'G' &&\r\n                                        <i className=\"fa fa-graduation-cap mr-2\" aria-hidden=\"true\"></i>\r\n                                    }\r\n                                    <p className=\"font-bold font-sans\">\r\n                                        {val.companyName}\r\n                                    </p>\r\n                                    <div className=\"flex items-center ml-2\">\r\n                                        <p className=\"font-bold font-sans\">\r\n                                            ({val.from}\r\n                                        </p>\r\n                                        <i className=\"fa fa-long-arrow-right mx-3\" aria-hidden=\"true\" />\r\n                                        <p className=\"font-bold font-sans\">\r\n                                            {val.to})\r\n                                        </p>\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div>\r\n                                    {val.location &&\r\n                                        <div className=\"flex items-center \">\r\n                                            <i className=\"fa fa-map-marker text-red-500\" aria-hidden=\"true\"></i>\r\n                                            <p className=\"pl-2 text-gray-700 text-base\">\r\n                                                {val.location}\r\n                                            </p>\r\n                                        </div>\r\n                                    }\r\n                                    {val.type &&\r\n                                        <div className=\"flex \">\r\n                                            <p className=\"ml-4 text-gray-700 text-base\">\r\n                                                Position:\r\n                                            </p>\r\n                                            <p className=\"pl-2 text-gray-700 text-base\">\r\n                                                {val.type}\r\n                                            </p>\r\n                                        </div>\r\n                                    }\r\n                                    {val.description &&\r\n                                        <p className=\"mt-2 whitespace-pre-wrap text-gray-700 text-base \">\r\n                                            {val.description}\r\n                                        </p>\r\n                                    }\r\n                                </div>\r\n                                <Tags className=\"p-2\" tags={val.jobs} format={(job) => `${job.name} - ${job.lang}`} />\r\n                                <Detail detailContent={val.details} className=\"ml-4\" isCollapse={isCollapse}/>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Title } from 'components/Title';\r\nimport React, { } from 'react';\r\n\r\nexport const Reference = () => {\r\n    return (\r\n        <div>\r\n            <Title name=\"References\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { Title } from 'components/Title';\r\nimport React, { } from 'react';\r\n\r\nexport const Skill = ({ myself, softwares, others }) => {\r\n    return (\r\n        <div>\r\n            <Title name=\"Skills\" />\r\n            <div className=\"flex pt-4\">\r\n                <div className=\"flex flex-1 flex-col\">\r\n                    <p className=\"font-roboto font-bold border-b-2 border-green-800 w-4/5\">Myself</p>\r\n                    <div>\r\n                        {myself && myself.map(val =>\r\n                            <p key={val} className=\"flex items-center\">\r\n                                <i className=\"fa fa-circle text-sm mr-2 text-yellow-500 \" aria-hidden=\"true\"></i>\r\n                                {val}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-1 flex-col\">\r\n                    <p className=\"font-roboto font-bold border-b-2 border-green-800 w-4/5\">Softwares</p>\r\n                    <div>\r\n                        {softwares && softwares.map(val =>\r\n                            <p key={val} className=\"flex items-center\">\r\n                                <i className=\"fa fa-circle text-sm mr-2 text-yellow-500 \" aria-hidden=\"true\"></i>\r\n                                {val}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-1 flex-col\">\r\n                    <p className=\"font-roboto font-bold border-b-2 border-green-800 w-4/5\">Others</p>\r\n                    <div>\r\n                        {others && others.map(val =>\r\n                            <p key={val} className=\"flex items-center\">\r\n                                <i className=\"fa fa-circle text-sm mr-2 text-yellow-500 \" aria-hidden=\"true\"></i>\r\n                                {val}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nexport const InformationDetail = ({ parts }) => {\r\n\r\n    const [itemIndex, setItemIndex] = useState({\r\n        current: 0,\r\n        last: 4,\r\n    });\r\n    const [extenseAll, setExtenseAll] = useState(false);\r\n\r\n    const sliderItem = (item, index) => {\r\n        if (item.visible) {\r\n            return (\r\n                <div key={index} className={`slides-holder__item ${itemIndex.current === index ? \"slides-holder__item_active\" : \"\"}`}\r\n                    style={{\r\n                        transform: `rotateZ(${-360 * index / 5}deg)`\r\n                    }}>\r\n                    <div className={`bg-green-600 slides-item  ${itemIndex.current !== index ? \"cursor-pointer\" : \"\"}`}\r\n                        onClick={() => {\r\n                            if (itemIndex.current !== index) {\r\n                                setItemIndex((prev) => ({\r\n                                    current: index,\r\n                                    last: prev.current,\r\n                                }));\r\n                            }\r\n                        }}>\r\n                        <div className={`${itemIndex.current === index ? \"slides-item-bg animated-zoom \" : \"\"}`} />\r\n                        <i className={`fa ${item.icon} text-3xl`}></i>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div key={index} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative md:h-screen\">\r\n            <div className=\"slider overflow-x-hidden md:block hidden\">\r\n                <div className=\"circular-slider\">\r\n                    <div className=\"slides-holder\" style={{\r\n                        transform: `rotateZ(${360 * itemIndex.current / 5 - 90}deg)`,\r\n                        transitionDuration: (Math.abs(itemIndex.last - itemIndex.current)) * 0.3 + \"s\"\r\n                    }}>\r\n                        {parts.map((item, index) => sliderItem(item, index))}\r\n\r\n                    </div>\r\n                    <div className=\"descriptions\">\r\n                        {parts.map((val, index) =>\r\n                            <div key={index} className={`descriptions__item ${itemIndex.current === index ? \" descriptions__item_visible\" : \"\"}`}>\r\n                                <h1 className=\"text-white bold uppercase text-2xl\">{val.name}</h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"relative h-full md:w-2/4 w-full lg:w-2/3\">\r\n                <div className=\"md:absolute md:top-1/2 md:transform md:-translate-y-1/2 md:h-3/4 w-full md:ml-4 md:overflow-hidden\">\r\n\r\n                    {parts.map((val, index) => {\r\n                        if (val.visible) {\r\n                            return (\r\n                                <div key={index} className={`md:absolute md:top-1/2 h-auto md:max-h-full w-full transition duration-300 ease-in-out \r\n                                    bg-white rounded-lg shadow-xl overflow-auto mb-2\r\n                                    ${itemIndex.current < index ? \"md:content-detail_before\" :\r\n                                        itemIndex.current === index ? \"md:content-detail_active\" :\r\n                                            itemIndex.current > index ? \"md:content-detail_after\" : \"\"}\r\n                        `}>\r\n                                    <button className=\"absolute top-3 right-3 z-10 md:block hidden\">\r\n                                        <label htmlFor=\"extenseInput\" className=\"flex items-center cursor-pointer mb-4 md:mb-0\">\r\n                                            <span className=\"mr-2 font-bold\">Extense all</span>\r\n                                            <div className=\"relative extenseAll\">\r\n                                                <input id=\"extenseInput\" type=\"checkbox\" className=\"hidden\"\r\n                                                    checked={extenseAll}\r\n                                                    onChange={() => setExtenseAll(!extenseAll)}\r\n                                                />\r\n                                                <div className=\"toggle__line w-12 h-6 bg-gray-200 rounded-full shadow-inner\"></div>\r\n                                                <div className=\"toggle__dot absolute w-5 h-5 bg-white rounded-full shadow inset-y-0 left-0\"></div>\r\n                                            </div>\r\n                                        </label>\r\n                                    </button>\r\n                                    <div className=\"relative px-6 py-4\">\r\n                                        {React.cloneElement(val.component, { isCollapse: extenseAll })}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        else {\r\n                            return <div key={index} />\r\n                        }\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { } from 'react';\r\n\r\nexport const TimeUpdated = ({ date, className = \"\" }) => {\r\n\r\n    return (\r\n        <div className=\"md:absolute md:bottom-0 md:right-0 px-10 py-2 text-right w-full\">\r\n            <p className={`${className}`}>Updated at {date}</p>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/selected.609ea5a2.png\";","import avatar from 'images/selected.png';\r\n\r\nconst updated = \"03/06/2021\";\r\n\r\nconst contacts = [\r\n    {\r\n        name: \"phone\",\r\n        link: \"tel:+84-963-192-405\",\r\n        newPage: false,\r\n    },\r\n    {\r\n        name: \"envelope\",\r\n        link: \"mailto:yeumotnguoi789@gmail.com\",\r\n        newPage: false,\r\n    },\r\n    {\r\n        name: \"facebook-square\",\r\n        link: \"https://www.facebook.com/style.in.my.eyes\",\r\n        newPage: true,\r\n    },\r\n];\r\nconst profile = {\r\n    name: \"Nguyễn Trung Hiếu\",\r\n    avatar: avatar,\r\n    job: \"Web/Mobile Deverloper\",\r\n    experience: \"1 Year Experience\",\r\n    region: \"Vietnam\",\r\n    gender: \"Male\",\r\n    otherLanguages: [\r\n        \"English\",\r\n    ],\r\n    description: `I have experience in developing web and mobile applications. I want to further develop my experience in big companies.\r\n    Orient my knowledge horizontally. So it is an advantage when deciding how to solve many problems.`,\r\n};\r\n\r\nconst education = [{\r\n    name: \"FPT University\",\r\n    location: \"Ho Chi Minh city\",\r\n    major: \"Software Engineer\",\r\n    majorType: [\r\n        \"Website app\",\r\n        \"Desktop app\",\r\n        \"Mobile app\",\r\n    ],\r\n    from: \"10/2016\",\r\n    to: \"9/2021\",\r\n    gpa: \"6.86\",\r\n    description: \"\",\r\n    certificates: [\r\n        {\r\n            name: \"Project Management Principles and Practices Specialization\",\r\n            link: \"https://coursera.org/share/4ca0d06ef43d40e545cb1445630fb70a\"\r\n        }\r\n    ]\r\n}];\r\n\r\nconst experience = [\r\n    {\r\n        companyName: \"FPT Software\",\r\n        companyType: \"C\",// F or C or G\r\n        location: \"Ho Chi Minh city\",\r\n        type: \"Intern\",\r\n        from: \"09/2019\",\r\n        to: \"03/2020\",\r\n        jobs: [{\r\n            name: \"Back-End\",\r\n            lang: \"C# .Net Core\",\r\n        }],\r\n        description: \"- Completed maintenance on existing programs\\n- Build new functionality for software\",\r\n        details: [\r\n            {\r\n                title: \"Technical Knowledge\",\r\n                lines: [\r\n                    \"RabitMQ\",\r\n                    \"Scheduler Quartz\",\r\n                    \"SignalR - Websocket\",\r\n                    \"Entity Framework Core - C# .Net Core 3.0 v s Dapper Mapping\",\r\n                    \"Singleton pattern\",\r\n                    \"MSSQL\"\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job\",\r\n                lines: [\r\n                    \"Perform database queries and allocate events onto the Quartz Scheduler and then execute a lot subqueries at the same time with RabitMQ.\",\r\n                    \"Create real-time connection with client through SignalR Socket (microsoft) for the purpose of increasing user experience.\"\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        companyName: \"Freelance job\",\r\n        companyType: \"F\",// F or C or G\r\n        from: \"12/2020\",\r\n        to: \"02/2021\",\r\n        jobs: [{\r\n            name: \"Front-End\",\r\n            lang: \"ReactJs\",\r\n        }],\r\n        description: '\"Ostolust\" webapp - Stores/Product managerment application',\r\n        details: [\r\n            {\r\n                title: \"Technical Knowledge\",\r\n                lines: [\r\n                    \"React Hook\",\r\n                    \"React Redux - Redux Saga\",\r\n                    \"React Context - State\",\r\n                    \"Container pattern vs Provider pattern\"\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job\",\r\n                lines: [\r\n                    \"Build a new app for a Store follows the template, use the built-in components\",\r\n                    \"Create frames on the XDesign(Adobe) file\",\r\n                    \"Filter products with some attributes\",\r\n                    \"Call API by 'axios' and show list results in view\"\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        companyName: \"Capstone Project - FPT University\",\r\n        companyType: \"G\",// F or C or G\r\n        from: \"01/2020\",\r\n        to: \"04/2021\",\r\n        jobs: [\r\n            {\r\n                name: \"Mobile\",\r\n                lang: \"React Native\",\r\n            },\r\n            {\r\n                name: \"Back-End\",\r\n                lang: \"C# .Net Core\",\r\n            },\r\n            {\r\n                name: \"Front-End\",\r\n                lang: \"ReactJs\",\r\n            },\r\n            {\r\n                name: \"Embedded\",\r\n                lang: \"C lang\",\r\n            }\r\n        ],\r\n        description: '\"Smart Cabinet\" system - Used for temporary storage of goods',\r\n        details: [\r\n            {\r\n                title: \"Technical Knowledge (Back-end)\",\r\n                lines: [\r\n                    \"Test API\",\r\n                    \"Authorize with JWT\",\r\n                    \"Filter in middleware\",\r\n                    \"Micro-Service pattern vs Pub-sub pattern\",\r\n                    \"Google APIs\",\r\n                    \"MS Azure Server\",\r\n                    \"Adafruit IO\",\r\n                    \"Momo Wallet API\",\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job (Back-end)\",\r\n                lines: [\r\n                    \"Create REST-full api for manage users and bookings\",\r\n                    \"Create template tructrure box for Cabinet by coordinate position number and numbers box\",\r\n                    \"Create REST-full api for handle event of user and 'Cabinet' in each micro-services\",\r\n                    \"Detech devices working (publisher - subscriber) by using Adapfruit Socket API and send command-messages to the define device\",\r\n                ]\r\n            },\r\n            {\r\n                title: \"Technical Knowledge (Front-end - mobile - smart screen)\",\r\n                lines: [\r\n                    \"React Native\",\r\n                    \"Expo platform\",\r\n                    \"Momo Wallet Payment API\",\r\n                    \"Unit test\",\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job (Front-end - mobile - smart screen)\",\r\n                lines: [\r\n                    \"Create aplication for mobile with big screen\",\r\n                    \"Design simple UI for descript number of Box in screen to user press and confirm or booking a box of that cabinet\",\r\n                    \"Create the code QR of Momo payment for booking\"\r\n                ]\r\n            },\r\n            {\r\n                title: \"Technical Knowledge (Front-end - mobile - phone)\",\r\n                lines: [\r\n                    \"React Native\",\r\n                    \"Google Authentication\",\r\n                    \"Google Maps API\",\r\n                    \"Momo Wallet Payment App\",\r\n                    \"Unit test\",\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job (Front-end - mobile - phone)\",\r\n                lines: [\r\n                    \"Appy the authentication by Google\",\r\n                    \"Design UI mobile and create a method generate graphic to user knows position of box in the cabinet that user chose\",\r\n                    \"Apply Momo Payment in mobile for user excuses immediately\",\r\n                    \"Create function to send directly command for maintaince man to fix the cabinet by bluetooth\"\r\n                ]\r\n            },\r\n            {\r\n                title: \"Technical Knowledge (Embedded)\",\r\n                lines: [\r\n                    \"Arduino device-connections\",\r\n                    \"Adafruit Embedded\",\r\n                    \"Network control\"\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job (Embedded)\",\r\n                lines: [\r\n                    \"Create mainboard from Kits Arduino\",\r\n                    \"Create method for connect to Adapfruit IO in real-time by Wifi\",\r\n                    \"Create method for maintaince man open by hand by bluetooth\",\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        companyName: \"Freelance job\",\r\n        companyType: \"F\",// F or C or G\r\n        from: \"06/2021\",\r\n        to: \"07/2021\",\r\n        jobs: [{\r\n            name: \"Front-End\",\r\n            lang: \"ReactJs\",\r\n        }],\r\n        description: \"Build an app for real estate search, analysis and transactions, use Google Map\",\r\n        details: [\r\n            {\r\n                title: \"Technical Knowledge\",\r\n                lines: [\r\n                    \"Unit Test\",\r\n                    \"Google Map in web\",\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job\",\r\n                lines: [\r\n                    \"Maintain UI for the description pages and search pages, responsive for app and fix bugs\",\r\n                    \"Add some view for detail contents\",\r\n                    \"Apply google map search locations in view\"\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        companyName: \"Freelance job\",\r\n        companyType: \"F\",// F or C or G\r\n        from: \"10/2021\",\r\n        to: \"03/2022\",\r\n        jobs: [{\r\n            name: \"Front-End\",\r\n            lang: \"React Native\",\r\n        }],\r\n        description: '\"Traverlog\" mobile aplication - Build a social app to search camping or traveling when you have free time and want to be go out, using Google Maps API.',\r\n        details: [\r\n            {\r\n                title: \"Technical Knowledge\",\r\n                lines: [\r\n                    \"React Native - Expo platform\",\r\n                    \"React Typescript\",\r\n                    \"Publish app to App Store and Google Play\",\r\n                    \"Authentication with Auth0 custom view\",\r\n                    \"Component Pattern\",\r\n                    \"Animation UI\",\r\n                    \"Unit test\",\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job\",\r\n                lines: [\r\n                    \"Create a mobile in Expo platfrom with authen by Auth0\",\r\n                    \"Create a lot animation with Animation UI for each Icons and Event when user press and moving like 'Tinder'\",\r\n                    \"Optimize performent for aminations\",\r\n                    \"Design UX/UI for Plat Cards Layer\",\r\n                    \"Add some view for detail contents\",\r\n                    \"Apply google map custom for direct directions in app\"\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        companyName: \"Freelance job\",\r\n        companyType: \"F\",// F or C or G\r\n        from: \"11/2021\",\r\n        to: \"05/2022\",\r\n        jobs: [{\r\n            name: \"Front-End\",\r\n            lang: \"ReactJs\",\r\n        }],\r\n        description: '\"The Second Life - power by Thunderstone\" micro pages of webapp - search for clothes by brand in the chain\\'s inventory and track the product by email or order it directly',\r\n        details: [\r\n            {\r\n                title: \"Technical Knowledge\",\r\n                lines: [\r\n                    \"React Typescript\",\r\n                    \"SCSS\",\r\n                    \"Component pattern vs Part View pattern\",\r\n                    \"Tailwind CSS\"\r\n                ]\r\n            },\r\n            {\r\n                title: \"Describe the job\",\r\n                lines: [\r\n                    \"Create views from the XDesign file\",\r\n                    \"Apply dynamic theme for each user\",\r\n                    \"Apply authen JWT of Server and Auth0 custom\",\r\n                    \"Create modal and notification slide for app\",\r\n                    \"Create responsive\"\r\n                ]\r\n            },\r\n        ]\r\n    },\r\n\r\n];\r\n\r\nconst skill = {\r\n    myself: [\r\n        \"Project Management\",\r\n        \"Software Development\",\r\n        \"Process improvement\",\r\n        \"Teamwork\"\r\n    ],\r\n    software: [\r\n        \"Visual Studio\",\r\n        \"Visual Studio Code\",\r\n        \"Android Studio\",\r\n        \"IntelliJ IDEA\",\r\n        \"Git base/UI\",\r\n    ],\r\n    other: [\r\n        \"Photoshop\",\r\n        \"Illustrator\",\r\n        \"XDesign\",\r\n        \"Sketch\",\r\n        \"Blender\"\r\n    ]\r\n}\r\n\r\nexport {\r\n    updated, contacts, education, experience, profile, skill\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Contact } from 'parts/Contact';\r\nimport { Education } from 'parts/Education';\r\nimport { InformationBasic } from 'parts/InformationBasic';\r\nimport { Experience } from 'parts/Experience';\r\nimport { Reference } from 'parts/Reference';\r\nimport { Skill } from 'parts/Skill';\r\nimport { InformationDetail } from 'parts/InformationDetail';\r\nimport { TimeUpdated } from 'components/TimeUpdated';\r\nimport { contacts, education, experience, profile, skill, updated } from 'info';\r\n\r\nconst scrollRef = React.createRef();\r\nlet timeTmp = 0;\r\nfunction App() {\r\n\r\n  const parts = [\r\n    {\r\n      name: \"Experiences\",\r\n      icon: \"fa-exclamation-circle \",\r\n      visible: true,\r\n      component: <Experience experience={experience} />\r\n    },\r\n    {\r\n      name: \"Educations\",\r\n      icon: \"fa-graduation-cap\",\r\n      visible: true,\r\n      component: <Education schools={education} />\r\n    },\r\n    {\r\n      name: \"Skills\",\r\n      icon: \"fa-thumbs-up\",\r\n      visible: true,\r\n      component: <Skill myself={skill.myself} softwares={skill.software} others={skill.other} />\r\n    },\r\n    {\r\n      name: \"References\",\r\n      icon: \"fa-bookmark\",\r\n      visible: true,\r\n      component: <Reference />\r\n    },\r\n    {\r\n      name: \"None\",\r\n      visible: false,\r\n    },\r\n  ];\r\n\r\n  const [isChangeAvatar, setChangeAvatar] = useState(false);\r\n  const [time, setTime] = useState(0);\r\n\r\n  const onScroll = () => {\r\n    const scrollTop = scrollRef.current?.scrollTop;\r\n    setChangeAvatar(scrollTop >= 200);\r\n  }\r\n  const onScrollToBottom = () => {\r\n    scrollRef.current?.scrollTo({\r\n      left: 0,\r\n      top: window.innerHeight * 2,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 768) {\r\n      timeTmp = 6;\r\n      countDown();\r\n    }\r\n  }, []);\r\n\r\n  const countDown = () => {\r\n    if (timeTmp <= 0) {\r\n      setTime(0);\r\n      return;\r\n    }\r\n    timeTmp--;\r\n    setTime(timeTmp);\r\n    setTimeout(countDown, 1000);\r\n  }\r\n  if (time > 0) {\r\n\r\n    return (\r\n      <div className=\"w-screen h-screen bg-gray-500 flex items-center justify-center\">\r\n        <div className=\"flex flex-col items-center\">\r\n          <p className=\" text-white text-center\">It will be better if you watch it on your PC/Laptop</p>\r\n          <p className=\"pb-2 text-white text-center\">{time}s to auto skip</p>\r\n          <button className=\"px-6 py-2 text-white mt-4 bg-green-300 rounded-lg\"\r\n            onClick={() => { timeTmp = 0; }}\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className=\"w-screen h-screen bg-green-600 overflow-y-auto overflow-x-hidden\"\r\n      ref={scrollRef}\r\n      onScroll={onScroll}\r\n    >\r\n      <div className={\"fixed w-full z-10 \"\r\n        + (isChangeAvatar ? \"bg-green-600 md:bg-transparent \" : \"\")}>\r\n        <div className=\"flex md:mx-12 mx-2\">\r\n          <div className=\"flex flex-1 items-center z-10\">\r\n            {!isChangeAvatar &&\r\n              <p className=\"absolute text-lg font-bold font-roboto text-white uppercase \">\r\n                Profile\r\n              </p>\r\n            }\r\n            <div className={\"flex items-center justify-center rounded-lg py-1 px-3 \"\r\n              + (isChangeAvatar ? \"border-solid border-white border-2 bg-green-600 mt-0.5\" : \"\")\r\n            }>\r\n              <img src={profile.avatar} alt=\"avatar\"\r\n                className={\"overflow-hidden h-16 w-16 rounded-full border-solid border-white border-2 shadow-xl \"\r\n                  + \"transition duration-500 ease-in-out \"\r\n                  + (isChangeAvatar ? \"opacity-1\" : \"opacity-0\")} />\r\n              {isChangeAvatar &&\r\n                <div className=\"ml-3 flex flex-col items-start\">\r\n                  <h3 className=\"text-white text-lg font-bold font-roboto\">\r\n                    {profile.name}\r\n                  </h3>\r\n                  <p className=\"text-white text-sm font-sans font-light\">\r\n                    {profile.job}\r\n                  </p>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n          <Contact contacts={contacts} />\r\n        </div>\r\n      </div>\r\n      <InformationBasic profile={profile} isChangeAvatar={isChangeAvatar} onScrollBottom={onScrollToBottom} />\r\n      <InformationDetail parts={parts} />\r\n      <TimeUpdated date={updated} className=\"text-white text-sm\" />\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/styles.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}