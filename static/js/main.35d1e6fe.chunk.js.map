{"version":3,"sources":["components/ContactItem.js","parts/Contact.js","parts/Education.js","parts/Information.js","parts/Experience.js","parts/Reference.js","parts/Skill.js","App.js","serviceWorker.js","index.js"],"names":["ContactItem","name","link","className","href","target","rel","Contact","contacts","map","val","Education","schools","from","class","to","major","gpa","description","majorType","type","certificates","c","index","Information","profile","job","Experience","experience","companyName","location","jobs","lang","Reference","Skill","App","useState","current","last","itemIndex","setItemIndex","avatar","parts","icon","visible","component","src","style","transform","transitionDuration","Math","abs","onFocus","console","log","onClick","prev","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35d1e6fe.chunk.js","sourcesContent":["import React, { } from 'react';\r\n\r\nexport const ContactItem = ({ name, link }) => {\r\n\r\n\r\n    return (\r\n        <a className=\"cursor-pointer\" href={link} target=\"_blank\" rel=\"noreferrer\">\r\n            <i className={`fa fa-${name} text-white text-2xl m-2.5`}></i>\r\n        </a>\r\n    )\r\n}","\r\nimport React, { } from 'react';\r\n\r\nimport { ContactItem } from 'components/ContactItem';\r\n\r\nexport const Contact = ({ contacts }) => {\r\n    return (\r\n        <div className=\"flex items-center\">\r\n            <p className=\"text-md bold font-sans text-white mr-4\">Contacts</p>\r\n            {contacts.map(val => <ContactItem key={val.name} name={val.name} link={val.link} />)}\r\n        </div>\r\n    )\r\n}","import React, { } from 'react';\r\nexport const Education = ({ schools }) => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"uppercase font-bold text-base text-xl font-sans pb-2 border-b-2\">\r\n                Educations\r\n            </h3>\r\n            {schools.map(val =>\r\n                <div key={val.name}>\r\n                    <div className=\"flex \">\r\n                        <p className=\"font-bold font-sans\">\r\n                            {val.name}\r\n                        </p>\r\n                        <div className=\"flex items-center ml-4\">\r\n\r\n                            <p className=\"font-bold font-sans\">\r\n                                ({val.from}\r\n                            </p>\r\n                            <i class=\"fa fa-long-arrow-right mx-3\" aria-hidden=\"true\" />\r\n                            <p className=\"font-bold font-sans\">\r\n                                {val.to})\r\n                            </p>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"pl-6\">\r\n                        <div className=\"flex \">\r\n                            <p className=\"text-gray-700 text-base\">\r\n                                Major:\r\n                            </p>\r\n                            <p className=\"ml-3 text-gray-700 text-base\">\r\n                                {val.major}\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"flex\">\r\n                            <p className=\"text-gray-700 text-base\">\r\n                                GPA:\r\n                            </p>\r\n                            <p className=\"ml-3 text-gray-700 text-base\">\r\n                                {val.gpa}\r\n                            </p>\r\n                        </div>\r\n                        {val.description &&\r\n                            <p className=\"ml-3 text-gray-700 text-base\">\r\n                                {val.description}\r\n                            </p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        {val.majorType.map(type =>\r\n                            <span className=\"inline-block bg-gray-200 hover:bg-red-300 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n                                #{type}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <p>\r\n                            Certificate:\r\n                        </p>\r\n                        {val.certificates.map((c, index) =>\r\n                            <div key={index}>\r\n                                <i class=\"fa fa-certificate text-yellow-500\" aria-hidden=\"true\"></i>\r\n                                <a className=\"ml-2 cursor-pointer text-green-500 font-bold text-base\" href={c.link} target=\"_blank\" rel=\"noreferrer\" >{c.name}</a>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}","import React, { } from 'react';\r\n\r\nexport const Information = ({ profile }) => {\r\n    return (\r\n        <div className=\"text-center px-3 pb-6\">\r\n            <h3 className=\"text-xl bold font-sans\">{profile.name}</h3>\r\n            <p className=\"mt-2 font-sans font-light\">{profile.job}</p>\r\n            {profile.description &&\r\n                <p className=\"mt-2 font-sans font-light\">{profile.description}</p>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { } from 'react';\r\n\r\nexport const Experience = ({ experience }) => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"uppercase font-bold text-base text-xl font-sans pb-2 border-b-2\">\r\n                Experiences\r\n            </h3>\r\n            {experience.map(val =>\r\n                <div key={val.name}>\r\n                    <div className=\"flex \">\r\n                        <p className=\"font-bold font-sans\">\r\n                            {val.companyName}\r\n                        </p>\r\n                        <div className=\"flex items-center ml-4\">\r\n\r\n                            <p className=\"font-bold font-sans\">\r\n                                ({val.from}\r\n                            </p>\r\n                            <i class=\"fa fa-long-arrow-right mx-3\" aria-hidden=\"true\" />\r\n                            <p className=\"font-bold font-sans\">\r\n                                {val.to})\r\n                            </p>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <div className=\"flex items-center \">\r\n                            <i className=\"fa fa-map-marker text-red-500\" aria-hidden=\"true\"></i>\r\n                            <p className=\"pl-2 text-gray-700 text-base\">\r\n                                {val.location}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"flex \">\r\n                            <p className=\"ml-4 text-gray-700 text-base\">\r\n                                Position:\r\n                            </p>\r\n                            <p className=\"pl-2 text-gray-700 text-base\">\r\n                                {val.type}\r\n                            </p>\r\n                        </div>\r\n\r\n                        {val.description &&\r\n                            <p className=\"mt-2 whitespace-pre text-gray-700 text-base\">\r\n                                {val.description}\r\n                            </p>\r\n                        }\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        {val.jobs.map((job, index) =>\r\n                            <div key={index}>\r\n                                <span className=\"inline-block bg-gray-200 hover:bg-red-300 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2\">\r\n                                    #{job.name} - {job.lang}\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { } from 'react';\r\n\r\nexport const Reference = () => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"uppercase font-bold text-base text-xl font-sans pb-2 border-b-2\">\r\n                References\r\n            </h3>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { } from 'react';\r\n\r\nexport const Skill = () => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"uppercase font-bold text-base text-xl font-sans pb-2 border-b-2\">\r\n                Skill\r\n            </h3>\r\n           \r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\nimport { Contact } from 'parts/Contact';\nimport { Education } from 'parts/Education';\nimport { Information } from 'parts/Information';\nimport { Experience } from 'parts/Experience';\nimport { Reference } from 'parts/Reference';\nimport { Skill } from 'parts/Skill';\n\nfunction App() {\n  const [itemIndex, setItemIndex] = useState({\n    current: 0,\n    last: 4,\n  });\n\n  const updated = \"14/11/2021\"\n  const contacts = [\n    {\n      name: \"phone\",\n      link: \"tel:+84-963-192-405\",\n    },\n    {\n      name: \"envelope\",\n      link: \"mailto:yeumotnguoi789@gmail.com\",\n    },\n    {\n      name: \"facebook-square\",\n      link: \"https://www.facebook.com/style.in.my.eyes\",\n    },\n  ]\n  const profile = {\n    name: \"Nguyễn Hiếu\",\n    avatar: \"https://scontent.fpnh22-4.fna.fbcdn.net/v/t1.6435-9/118139431_1730686400418708_5167623874361533360_n.jpg?_nc_cat=103&ccb=1-5&_nc_sid=09cbfe&_nc_ohc=H9Dsn9htSiQAX-XLGwb&tn=78f5E36gZxCZg_RD&_nc_ht=scontent.fpnh22-4.fna&oh=f08dde4e5de71cbbaeb72dd84dcc54ff&oe=61B82D8F\",\n    job: \"Web/Mobile Deverloper\",\n    description: \"\",\n  }\n  const education = [{\n    name: \"FPT University\",\n    location: \"Ho Chi Minh city\",\n    major: \"Software Engineer\",\n    majorType: [\n      \"Website app\",\n      \"Desktop app\",\n      \"Mobile app\",\n    ],\n    from: \"10/2016\",\n    to: \"9/2021\",\n    gpa: \"6.86\",\n    description: \"\",\n    certificates: [\n      {\n        name: \"Project Management Principles and Practices Specialization\",\n        link: \"https://coursera.org/share/4ca0d06ef43d40e545cb1445630fb70a\"\n      }\n    ]\n  }];\n\n  const experience = [{\n    companyName: \"FPT Software\",\n    location: \"Ho Chi Minh city\",\n    type: \"Interm\",\n    from: \"09/2019\",\n    to: \"03/2020\",\n    jobs: [{\n      name: \"Deverlop BE\",\n      lang: \"C#\",\n    }],\n    description:\"- Completed maintenance on existing programs\\n- Build new functionality for software\"\n  }]\n\n  const parts = [{\n    name: \"Educations\",\n    icon: \"fa-graduation-cap\",\n    visible: true,\n    component: <Education schools={education} />\n  },\n  {\n    name: \"Experiences\",\n    icon: \"fa-exclamation-circle \",\n    visible: true,\n    component: <Experience experience={experience} />\n  },\n  {\n    name: \"Skills\",\n    icon: \"fa-thumbs-up\",\n    visible: true,\n    component: <Skill />\n  },\n  {\n    name: \"References\",\n    icon: \"fa-bookmark\",\n    visible: true,\n    component: <Reference />\n  },\n  {\n    name: \"None\",\n    visible: false,\n  },\n  ]\n  return (\n    <div className=\"w-screen h-screen bg-blue-500 overflow-scroll overflow-x-hidden\">\n      <div className=\"fixed h-4 w-full z-10\">\n        <div className=\"flex mx-12\">\n          <div className=\"flex flex-1 items-center uppercase\">\n            <p className=\"text-lg bold font-sans text-white\">\n              Profile\n            </p>\n          </div>\n          <Contact contacts={contacts} />\n        </div>\n      </div>\n      <div className=\"w-3/4 mx-auto h-screen\">\n        <div className=\"flex justify-center transform translate-y-20\">\n          <img src={profile.avatar} className=\"overflow-hidden w-40 rounded-full border-solid border-white border-2 -mt-3  shadow-xl\" />\n        </div>\n        <div className=\" bg-white rounded-xl p-4 pt-24\">\n          <Information profile={profile} />\n        </div>\n      </div>\n\n      <div className=\"part2 relative h-screen\">\n        <div className=\"slider overflow-x-hidden\">\n          <div className=\"circular-slider\">\n            <div className=\"slides-holder\" style={{\n              transform: `rotateZ(${360 * itemIndex.current / 5 - 90}deg)`,\n              transitionDuration: (Math.abs(itemIndex.last - itemIndex.current)) * 0.3 + \"s\"\n            }}>\n              {parts.map((val, index) => {\n                if (val.visible) {\n                  return (\n                    <div key={index} className={`slides-holder__item ${itemIndex.current === index ? \"slides-holder__item_active\" : \"\"}`}\n                      style={{\n                        transform: `rotateZ(${-360 * index / 5}deg)`\n                      }}>\n                      <div className=\"bg-blue-500 slides-item\" onFocus={() => {\n                        console.log(\"mess\");\n                      }}\n                        onClick={() => {\n                          if (itemIndex.current !== index) {\n                            setItemIndex((prev) => ({\n                              current: index,\n                              last: prev.current,\n                            }));\n                          }\n                        }}>\n                        <i className={`fa ${val.icon} text-2xl`}></i>\n                      </div>\n                    </div>\n                  )\n                } else {\n                  return <div key={index} />\n                }\n              })}\n\n            </div>\n            <div className=\"descriptions\">\n              {parts.map((val, index) =>\n                <div key={index} className={`descriptions__item ${itemIndex.current === index ? \" descriptions__item_visible\" : \"\"}`}>\n                  <h1 className=\"text-white bold uppercase text-2xl\">{val.name}</h1>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"absolute h-full w-3/5 overflow-hidden\">\n          {parts.map((val, index) => {\n            if (val.visible) {\n              return (\n                <div key={index} className={`absolute top-1/2 w-full transition duration-300 ease-in-out my-6 ml-4 bg-white rounded overflow-hidden shadow-lg\n            ${itemIndex.current < index ? \"content-detail_before\" :\n                    itemIndex.current === index ? \"content-detail_active\" :\n                      itemIndex.current > index ? \"content-detail_after\" : \"\"}\n            `}>\n                  <div className=\"px-6 py-4  \">\n                    {val.component}\n                  </div>\n                </div>\n              )\n            }\n            else {\n              return <div key={index} />\n            }\n          })}\n\n        </div>\n\n      </div>\n      <div className=\"absolute bottom-0 right-0 px-10 py-2\">\n        <p className=\"text-white text-sm\">Update {updated}</p>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}